rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 인증된 사용자인지 확인하는 함수
    function isAuthenticated() {
      return request.auth != null;
    }

    // 본인 데이터인지 확인하는 함수
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // 작성자 본인 확인 함수
    function isAuthor(authorId) {
      return request.auth.uid == authorId;
    }

    // 게시글 작성자 확인 함수
    function isPostAuthor(postId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/posts/$(postId)).data.authorId == request.auth.uid;
    }

    // 댓글 작성 간격 확인 (스팸 방지)
    function hasCommentCooldown() {
      return !exists(/databases/$(database)/documents/users/$(request.auth.uid)/lastComment) ||
        duration.value(request.time - get(/databases/$(database)/documents/users/$(request.auth.uid)/lastComment).data.timestamp) > duration.value(1 * 60 * 1000);
    }

    // users 컬렉션 규칙
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }

    // posts 컬렉션 규칙
    match /posts/{postId} {
      // 게시글 읽기는 인증된 사용자만
      allow read: if isAuthenticated();
      // 게시글 작성은 인증된 사용자만
      allow create: if isAuthenticated();
      // 수정/삭제는 작성자만
      allow update, delete: if isAuthenticated() && 
        request.auth.uid == resource.data.authorId;

      // likes 서브컬렉션 규칙
      match /likes/{likeId} {
        allow read: if isAuthenticated();
        allow create, delete: if isAuthenticated() && 
          request.auth.uid == likeId;
      }

      // comments 서브컬렉션 규칙
      match /comments/{commentId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && 
          request.auth.uid == resource.data.authorId;
      }
    }

    // 댓글 규칙
    match /posts/{postId}/comments/{commentId} {
      // 읽기: 인증된 사용자
      allow read: if isAuthenticated();
      
      // 쓰기: 인증된 사용자 + 스팸 방지
      allow create: if isAuthenticated() && hasCommentCooldown();
      
      // 수정: 작성자만
      allow update: if isAuthor(resource.data.authorId);
      
      // 삭제: 작성자 또는 게시글 작성자
      allow delete: if isAuthor(resource.data.authorId) || isPostAuthor(postId);
    }
  }
} 